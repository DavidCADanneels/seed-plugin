<j:jelly xmlns:j="jelly:core" xmlns:f="/lib/form">
    <f:entry>
        <p>
            This step generates a branch folder, using the parameters below.
        </p>
        <p>
            Those settings have been generated by the project seed, and should not be updated manually.
        </p>
    </f:entry>
    <f:section title="Project data" name="projectConfig">
        <f:entry title="Project identifier" field="project">
            <f:textbox value="${instance.projectConfig.project}"/>
        </f:entry>
        <f:entry title="Project SCM type" field="scmType">
            <f:textbox value="${instance.projectConfig.scmType}"/>
        </f:entry>
        <f:entry title="Project SCM URL" field="scmUrl">
            <f:textbox value="${instance.projectConfig.scmUrl}"/>
        </f:entry>
        <f:entry title="Project SCM credentials" field="scmCredentials">
            <f:textbox value="${instance.projectConfig.scmCredentials}"/>
        </f:entry>
        <f:section title="Pipeline configuration" name="pipelineConfig">
            <f:entry title="Project branch destructor" field="destructor">
                <f:checkbox checked="${instance.projectConfig.pipelineConfig.destructor}" default="false"/>
            </f:entry>
            <f:entry title="Commit/revision parameter" field="commitParameter">
                <f:textbox value="${instance.projectConfig.pipelineConfig.commitParameter}"/>
            </f:entry>
            <f:entry title="Extra Branch SCM parameter" field="branchSCMParameter">
                <f:checkbox checked="${instance.projectConfig.pipelineConfig.branchSCMParameter}" default="false"/>
            </f:entry>
            <f:entry title="Extra branch parameters" field="branchParameters">
                <f:textarea value="${instance.projectConfig.pipelineConfig.branchParameters}"/>
            </f:entry>
            <f:entry title="Extra DSL for project generation" field="generationExtension">
                <f:textarea value="${instance.projectConfig.pipelineConfig.generationExtension}"
                            codemirror-mode="groovy"
                            codemirror-config="mode: 'text/x-groovy', lineNumbers: true, matchBrackets: true, onBlur: function(editor){editor.save()}"/>
            </f:entry>
            <f:section title="Naming strategy" name="namingStrategy">
                <f:entry title="Project folder path" field="projectFolderPath">
                    <f:textbox value="${instance.projectConfig.pipelineConfig.namingStrategy.projectFolderPath}"/>
                </f:entry>
                <f:entry title="Branch folder path" field="branchFolderPath">
                    <f:textbox value="${instance.projectConfig.pipelineConfig.namingStrategy.branchFolderPath}"/>
                </f:entry>
                <f:entry title="Project seed name" field="projectSeedName">
                    <f:textbox value="${instance.projectConfig.pipelineConfig.namingStrategy.projectSeedName}"/>
                </f:entry>
                <f:entry title="Project destructor name" field="projectDestructorName">
                    <f:textbox value="${instance.projectConfig.pipelineConfig.namingStrategy.projectDestructorName}"/>
                </f:entry>
                <f:entry title="Branch seed name" field="branchSeedName">
                    <f:textbox value="${instance.projectConfig.pipelineConfig.namingStrategy.branchSeedName}"/>
                </f:entry>
                <f:entry title="Branch start name" field="branchStartName">
                    <f:textbox value="${instance.projectConfig.pipelineConfig.namingStrategy.branchStartName}"/>
                </f:entry>
                <f:entry title="Branch name" field="branchName">
                    <f:textbox value="${instance.projectConfig.pipelineConfig.namingStrategy.branchName}"/>
                </f:entry>
                <f:entry title="Ignored branch prefixes" field="ignoredBranchPrefixes">
                    <f:textarea value="${instance.projectConfig.pipelineConfig.namingStrategy.ignoredBranchPrefixes}"/>
                </f:entry>
            </f:section>
            <f:section title="Event strategy" name="eventStrategy">
                <f:entry title="Delete complete pipeline on branch deletion" field="delete">
                    <f:checkbox checked="${instance.projectConfig.pipelineConfig.eventStrategy.delete}" default="true"/>
                </f:entry>
                <f:entry title="Regenerate pipeline when seed files changed" field="auto">
                    <f:checkbox checked="${instance.projectConfig.pipelineConfig.eventStrategy.auto}" default="true"/>
                </f:entry>
                <f:entry title="Triggers the pipeline start when commit received" field="trigger">
                    <f:checkbox checked="${instance.projectConfig.pipelineConfig.eventStrategy.trigger}" default="true"/>
                </f:entry>
                <f:entry title="Starts the pipeline upon (re)generation" field="startAuto">
                    <f:checkbox checked="${instance.projectConfig.pipelineConfig.eventStrategy.startAuto}" default="true"/>
                </f:entry>
                <f:entry title="Event parameter which contains the commit" field="commit">
                    <f:textbox value="${instance.projectConfig.pipelineConfig.eventStrategy.commit}"/>
                    <!-- TODO Depends on the end point - might not be needed at all -->
                </f:entry>
            </f:section>
        </f:section>
    </f:section>
</j:jelly>
